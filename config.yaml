options:
  custom_registries:
    type: string
    default: "[]"
    description: |+
      Registry endpoints and credentials. Setting this config allows Kubelet
      to pull images from registries where auth is required.

      The value for this config must be a JSON array of credential objects, like this:
        e.g.: [{"host": "my.registry:port", "username": "user", "password": "pass"}]

      Credential Object Parameters:
      `url: REQUIRED str`
        the URL to the registry, include the port if not it isn't implied from the schema.
          e.g: "url": "https://my.registry:8443"
          e.g: "url": "http://my.registry"

      host: OPTIONAL str - defaults to auto-generated from the url
        could be registry host address or a name
          e.g.: myregistry.io:9000, 10.10.10.10:5432
          e.g.: myregistry.io, myregistry
        Note: It will be derived from `url` if not provided.
          e.g.: "url": "http://10.10.10.10:8000" --> "host": "10.10.10.10:8000"

      username: OPTIONAL str - default ''
      password: OPTIONAL str|dict - default ''
        Used by containerd for basic authentication to the registry.
        If a string, will be rendered wrapped as a double-quoted str (password = "my-strong-password")
        If a dictionary, will be rendered as a single-quoted json (password = '{"my": "json"}')
        e.g.:  "password": '"$(jq -c . gce.json)"'


      ca_file: OPTIONAL str - default ''
      cert_file: OPTIONAL str - default ''
      key_file: OPTIONAL str - default ''
        For ssl/tls communication these should be a base64 encoded file
        e.g.:  "ca_file": "'"$(base64 -w 0 < my.custom.registry.pem)"'"

      insecure_skip_verify: OPTIONAL bool - default false
        For situatations where the registry has self-signed or expired certs and a quick work-around is necessary.
        e.g.: "insecure_skip_verify": true

      example config)
      juju config containerd custom_registries='[{
          "url": "https://registry.example.com",
          "ca_file": "'"$(base64 -w 0 < ~/my.custom.ca.pem)"'",
          "cert_file": "'"$(base64 -w 0 < ~/my.custom.cert.pem)"'",
          "key_file": "'"$(base64 -w 0 < ~/my.custom.key.pem)"'",
      }]'
  gpu_driver:
    type: string
    default: "auto"
    description: |
      Override GPU driver installation.  Options are "auto", "nvidia", "none".

      Caution: setting this to nvidia will cause nvidia drivers to be installed on kubernetes-control-plane, even if a GPU is not present.
  runtime:
    type: string
    default: "auto"
    description: |
      Set a custom containerd runtime.  Set "auto" to select based on hardware.
  kill_signal:
    type: string
    default: "SIGTERM"
    description: |
      Set containerd systemd KillSignal. Options are standard signals from
      https://man7.org/linux/man-pages/man7/signal.7.html
  shim:
    type: string
    default: "containerd-shim"
    description: |
      Set a custom containerd shim.
  http_proxy:
     type: string
     default: ""
     description: |
        URL to use for HTTP_PROXY to be used by Containerd. Useful in
        egress-filtered environments where a proxy is the only option for
        accessing the registry to pull images.
  https_proxy:
    type: string
    default: ""
    description: |
        URL to use for HTTPS_PROXY to be used by Containerd. Useful in
        egress-filtered environments where a proxy is the only option for
        accessing the registry to pull images.
  no_proxy:
    type: string
    default: ""
    description: |
        Comma-separated list of destinations (either domain names or IP
        addresses) which should be accessed directly, rather than through
        the proxy defined in http_proxy or https_proxy. Must be less than
        2023 characters long.
  config_version:
    type: string
    default: v2
    description: |
        Containerd config version. Can be "v1" or "v2".

        DEPRECATED: config_version will be removed in a future release.
  nvidia_apt_key_urls:
    type: string
    default: |
      https://nvidia.github.io/nvidia-container-runtime/gpgkey
      https://developer.download.nvidia.com/compute/cuda/repos/{id}{version_id_no_dot}/x86_64/3bf863cc.pub
    description: |
        Space-separated list of APT GPG key URLs to add when using Nvidia GPUs.

        Supported template options:
          {id}: OS release ID, e.g. "ubuntu"
          {version_id}: OS release version ID, e.g. "20.04"
          {version_id_no_dot}: OS release version ID with no dot, e.g. "2004"
  nvidia_apt_sources:
    type: string
    default: |
      deb https://nvidia.github.io/libnvidia-container/{id}{version_id}/$(ARCH) /
      deb https://nvidia.github.io/nvidia-container-runtime/{id}{version_id}/$(ARCH) /
      deb https://developer.download.nvidia.com/compute/cuda/repos/{id}{version_id_no_dot}/x86_64 /
    description: |
        Newline-separated list of APT sources to add when using Nvidia GPUs.

        Supported template options:
          {id}: OS release ID, e.g. "ubuntu"
          {version_id}: OS release version ID, e.g. "20.04"
          {version_id_no_dot}: OS release version ID with no dot, e.g. "2004"
  nvidia_apt_packages:
    type: string
    default: "cuda-drivers nvidia-container-runtime"
    description: |
        Space-separated list of APT packages to install when using Nvidia GPUs.
