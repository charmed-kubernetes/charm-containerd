options:
  custom_registries:
    type: string
    default: "[]"
    description: |+
      Registry endpoints and credentials. Setting this config allows Kubelet
      to pull images from registries where auth is required.

      The value for this config must be a JSON array of credential objects, like this:
      [{"host": "my.registry:port", "username": "user", "password": "pass"}]

      `host` could be registry host address, e.g.:  myregistry.io:9000, 10.10.10.10:5432.
      or a name, e.g.: myregistry.io, myregistry.
      It will be derived from `url` if not provided, e.g.:
        url: http://10.10.10.10:8000 --> host: 10.10.10.10:8000

      If required, you can supply credentials with option keys 'username' and 'password',
      or 'ca_file', 'cert_file', and 'key_file' for ssl/tls communication,
      which should be base64 encoded file contents in string form

      "ca_file": "'"$(base64 -w 0 < my.custom.registry.pem)"'"

      example config)
      juju config containerd custom_registries='[{
          "url": "https://registry.example.com",
          "ca_file": "'"$(base64 -w 0 < ~/my.custom.ca.pem)"'",
          "cert_file": "'"$(base64 -w 0 < ~/my.custom.cert.pem)"'",
          "key_file": "'"$(base64 -w 0 < ~/my.custom.key.pem)"'",
      }]'
  gpu_driver:
    type: string
    default: "auto"
    description: |
      Override GPU driver installation.  Options are "auto", "nvidia", "none".
  runtime:
    type: string
    default: "auto"
    description: |
      Set a custom containerd runtime.  Set "auto" to select based on hardware.
  shim:
    type: string
    default: "containerd-shim"
    description: |
      Set a custom containerd shim.
  http_proxy:
     type: string
     default: ""
     description: |
        URL to use for HTTP_PROXY to be used by Containerd. Useful in
        egress-filtered environments where a proxy is the only option for
        accessing the registry to pull images.
  https_proxy:
    type: string
    default: ""
    description: |
        URL to use for HTTPS_PROXY to be used by Containerd. Useful in
        egress-filtered environments where a proxy is the only option for
        accessing the registry to pull images.
  no_proxy:
    type: string
    default: ""
    description: |
        Comma-separated list of destinations (either domain names or IP
        addresses) which should be accessed directly, rather than through
        the proxy defined in http_proxy or https_proxy. Must be less than
        2023 characters long.
  config_version:
    type: string
    default: v1
    description: |
        (Use carefully, v2 is only tested for nvidia gpu operator)
        Use value "v2" for this config parameter to enable new configuration format.
        Config file is parsed as version 1 by default.
        Version 2 uses long plugin names, i.e. "io.containerd.grpc.v1.cri" vs "cri".
  nvidia_apt_key_urls:
    type: string
    default: |
      https://nvidia.github.io/nvidia-container-runtime/gpgkey
      https://developer.download.nvidia.com/compute/cuda/repos/{id}{version_id_no_dot}/x86_64/7fa2af80.pub
    description: |
        Space-separated list of APT GPG key URLs to add when using Nvidia GPUs.

        Supported template options:
          {id}: OS release ID, e.g. "ubuntu"
          {version_id}: OS release version ID, e.g. "20.04"
          {version_id_no_dot}: OS release version ID with no dot, e.g. "2004"
  nvidia_apt_sources:
    type: string
    default: |
      deb https://nvidia.github.io/libnvidia-container/{id}{version_id}/$(ARCH) /
      deb https://nvidia.github.io/nvidia-container-runtime/{id}{version_id}/$(ARCH) /
      deb http://developer.download.nvidia.com/compute/cuda/repos/{id}{version_id_no_dot}/x86_64 /
    description: |
        Newline-separated list of APT sources to add when using Nvidia GPUs.

        Supported template options:
          {id}: OS release ID, e.g. "ubuntu"
          {version_id}: OS release version ID, e.g. "20.04"
          {version_id_no_dot}: OS release version ID with no dot, e.g. "2004"
  nvidia_apt_packages:
    type: string
    default: "cuda-drivers nvidia-container-runtime"
    description: |
        Space-separated list of APT packages to install when using Nvidia GPUs.
