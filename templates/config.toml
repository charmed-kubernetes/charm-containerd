root = "/var/lib/containerd"
state = "/run/containerd"
oom_score = 0

[grpc]
  address = "/run/containerd/containerd.sock"
  uid = 0
  gid = 0
  max_recv_message_size = 16777216
  max_send_message_size = 16777216

[debug]
  address = ""
  uid = 0
  gid = 0
  level = ""

[metrics]
  address = ""
  grpc_histogram = false

[cgroup]
  path = ""

[plugins]
  [plugins.cgroups]
    no_prometheus = false
  [plugins.cri]
    stream_server_address = "127.0.0.1"
    stream_server_port = "0"
    enable_selinux = false
    sandbox_image = "{{ sandbox_image }}"
    stats_collect_period = 10
    systemd_cgroup = false
    enable_tls_streaming = false
    max_container_log_line_size = 16384
    [plugins.cri.containerd]
      no_pivot = false
      [plugins.cri.containerd.default_runtime]
        runtime_type = "io.containerd.runtime.v1.linux"
	  {% if untrusted %}
      [plugins.cri.containerd.untrusted_workload_runtime]
        runtime_type= "io.containerd.{{ untrusted_name }}.v2"
	  {% endif %}
      [plugins.cri.containerd.runtimes]
        [plugins.cri.containerd.runtimes.runc]
          runtime_type = "io.containerd.runc.v1"
	    {% if untrusted %}
        [plugins.cri.containerd.runtimes.{{ untrusted_name }}]
          runtime_type= "io.containerd.{{ untrusted_name }}.v2"
          [plugins.cri.containerd.runtimes.{{ untrusted_name }}.options]
            Runtime = "{{ untrusted_binary }}"
            RuntimeRoot = "{{ untrusted_path }}"
		{% endif %}
    [plugins.cri.cni]
      bin_dir = "/opt/cni/bin"
      conf_dir = "/etc/cni/net.d"
      conf_template = ""
    [plugins.cri.registry]
      [plugins.cri.registry.mirrors]
        [plugins.cri.registry.mirrors."docker.io"]
          endpoint = ["https://registry-1.docker.io"]
    {% if custom_registries %}
      [plugins.cri.registry.auths]
      {% for registry in custom_registries %}
        {% if registry.username and registry.password  %}
        [plugins.cri.registry.auths."{{ registry.url }}"]
          username = "{{ registry.username }}"
          password = "{{ registry.password }}"
        {% endif %}
      {% endfor %}
      [plugins.cri.registry.configs]
      {% for registry in custom_registries %}
        {% if registry.ca and registry.cert and registry.key  %}
        [plugins.cri.registry.configs."{{ registry.url }}".tls]
          ca_file   = "{{ registry.ca }}"
          cert_file = "{{ registry.cert }}"
          key_file  = "{{ registry.key }}"
        {% endif %}
      {% endfor %}
    {% endif %}
    [plugins.cri.x509_key_pair_streaming]
      tls_cert_file = ""
      tls_key_file = ""
  [plugins.diff-service]
    default = ["walking"]
  [plugins.linux]
    shim = "{{ shim }}"
    runtime = "{{ runtime }}"
    runtime_root = ""
    no_shim = false
    shim_debug = false
  [plugins.opt]
    path = "/opt/containerd"
  [plugins.restart]
    interval = "10s"
  [plugins.scheduler]
    pause_threshold = 0.02
    deletion_threshold = 0
    mutation_threshold = 100
    schedule_delay = "0s"
    startup_delay = "100ms"
